---
  - name: execute shell command
    shell: hostname
  
  - name: ec2
    user:
       name: ec2-user
    register: user_info
  
  - name: install docker-py using pip
    pip:
      name: docker-py
      
  - name: install docker using yum
    yum:
      name: docker
      state: present

  - name: start docker service
    service:
      name: docker
      state: started
 
  - name: Init a new swarm with default parameters
    docker_swarm:
      advertise_addr: "{{ item }}"
      state: present
    with_items: "{{ groups['docker-swarm-master'] }}"

  - name: init report
    docker_swarm:
        state: inspect
    register: master
    tags:
       - inspect

  - name: to print inspect
    debug:
      msg: "printing the inspect value {{ hostvars[groups['docker-swarm-master'][0]].master['swarm_facts']['JoinTokens']['Worker'] }}"
    tags:
      - inspectprint

- name: configuring dockerswarm node 
  hosts: docker-swarm-node
  become: True
  gather_facts: True
  
  tasks:     
  
  - name: execute shell command
    shell: hostname
  
  - name: install docker-py using pip
    pip:
      name: docker-py
    with_items: "{{ groups['docker-swarm-node'] }}"
      
  - name: install docker using yum
    yum:
      name: docker
      state: present
    with_items: "{{ groups['docker-swarm-node'] }}"

  - name: start docker service
    service:
      name: docker
      state: started 
    with_items: "{{ groups['docker-swarm-node'] }}"  

  #- name: join worker node to dockerswarm manager
  #  shell:  docker swarm join --token "{{ hostvars['docker-swarm-master']['swarm_node_token'] }}"  "{{ groups['docker-swarm-master'] }}:2377"
  #  with_items: "{{ groups['docker-swarm-node'] }}"

  - name: Add workers to docker swarm manager
    docker_swarm:
      state: join
      join_token: "{{ hostvars[groups['docker-swarm-master'][0]].master['swarm_facts']['JoinTokens']['Worker'] }}"
      advertise_addr: "{{ item }}"
      remote_addrs: "{{ groups['docker-swarm-master'] }}"
    with_items: "{{ groups['docker-swarm-node'] }}"
