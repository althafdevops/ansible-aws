---
- name: server are provisioned in vpc
  hosts: localhost
  gather_facts: false
  vars:
     ec2_vpcidr: 10.251.0.0/16
     ec2_stack_name: "project1"
     ec2_subnetcidr: 10.251.1.0/24
     ec2_region: "eu-west-1"
     ec2_az: a
     ec2_stack_name: 1
     ec2_key_name: "project1"
     
     
  tasks:
  - name: vpc is present
    ec2_vpc_net:
      state: present
      region: eu-west-1
      cidr_block: "{{ ec2_vpcidr }}"
      name: "{{ ec2_stack_name }}-vpc"
      tags:
        tool: ansible  
    register: network
    
  - name: vpc subnet is present
    ec2_vpc_subnet:
       region: "{{ ec2_region }}"
       state: present
       cidr: "{{ ec2_subnetcidr }}"
       az: "{{ ec2_region }}{{ ec2_az }}"
       resource_tags:
         tool: ansible
         Name: "{{ ec2_stack_name }}-subnet-{{ ec2_az }}"
       vpc_id: "{{ network.vpc.id }}"
    register: vpc_subnet

  - name: vpc internet gateway is present
    ec2_vpc_igw:
       region: "{{ ec2_region }}"
       vpc_id: "{{ network.vpc.id }}"
       state: present
    register: igw 
    
  - name: vpc public subnet route table is present
    ec2_vpc_route_table:
     region: "{{ ec2_region }}"
     vpc_id: "{{ network.vpc.id }}"
     tags:
        Name: "{{ ec2_stack_name }}-public"
     subnets:
       - "{{ vpc_subnet.subnet.id }}"
     routes:
       - dest: 0.0.0.0/0
         gateway_id: "{{ igw.gateway_id }}"
         
  - name: vpc security group is present
    ec2_group:
     name: "{{ ec2_stack_name }}-webservers"
     region: "{{ ec2_region }}"
     description: SSH and HTTP/HTTPS
     vpc_id: "{{ network.vpc.id }}"
     rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
       
  - name: search for latest centos7 ami
    ec2_ami_find:
      owner: "410186602215"
      region: "{{ ec2_region }}"
      name: "CentOS Linux 7 x86_64 HVM EBS"
    register: find_results

  - name: provision ec2 with exact count variable
    ec2:
      key_name: "{{ ec2_key_name }}"
      group: "{{ ec2_stack_name }}-webservers" 
      volumes: 
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: 8
        delete_on_termination: true
      vpc_subnet_id: "{{ vpc_subnet_id }}"
      instance_type: t2.micro
      image: "{{ find_results.results[0].ami_id }}"
      wait: true
      region: "{{ ec2_region }}"
      exact_count: "{{ ec2_exact_count }}"
      count_tag:
        Count: "{{ ec2_stack_name }}"
      instance_tags:
        Name: "{{ ec2_stack_name }}"
        Count: "{{ ec2_stack_name }}"
      assign_public_ip: true
    register: ec2
      
   
    
